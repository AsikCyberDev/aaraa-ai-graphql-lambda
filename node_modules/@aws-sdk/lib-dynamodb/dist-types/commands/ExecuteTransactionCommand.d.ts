import type { ItemResponse, ParameterizedStatement, ExecuteTransactionCommandInput as __ExecuteTransactionCommandInput, ExecuteTransactionCommandOutput as __ExecuteTransactionCommandOutput } from "@aws-sdk/client-dynamodb";
import { ExecuteTransactionCommand as __ExecuteTransactionCommand } from "@aws-sdk/client-dynamodb";
import { DynamoDBDocumentClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/lib-dynamodb/dist-types/DynamoDBDocumentClient";
import { DynamoDBDocumentClientCommand } from "@aws-sdk/lib-dynamodb/dist-types/baseCommand/DynamoDBDocumentClientCommand";
import type { NativeAttributeValue } from "@aws-sdk/util-dynamodb";
import { Command as $Command } from "@smithy/smithy-client";
import { Handler, MiddlewareStack, HttpHandlerOptions as __HttpHandlerOptions } from "@smithy/types";
/**
 * @public
 */
export { $Command, DynamoDBDocumentClientCommand };
/**
 * @public
 */
export type ExecuteTransactionCommandInput = Omit<__ExecuteTransactionCommandInput, "TransactStatements"> & {
    TransactStatements: (Omit<ParameterizedStatement, "Parameters"> & {
        Parameters?: NativeAttributeValue[];
    })[] | undefined;
};
/**
 * @public
 */
export type ExecuteTransactionCommandOutput = Omit<__ExecuteTransactionCommandOutput, "Responses"> & {
    Responses?: (Omit<ItemResponse, "Item"> & {
        Item?: Record<string, NativeAttributeValue>;
    })[];
};
/**
 * Accepts native JavaScript types instead of `AttributeValue`s, and calls
 * ExecuteTransactionCommand operation from {@link @aws-sdk/client-dynamodb#ExecuteTransactionCommand}.
 *
 * JavaScript objects passed in as parameters are marshalled into `AttributeValue` shapes
 * required by Amazon DynamoDB. Responses from DynamoDB are unmarshalled into plain JavaScript objects.
 *
 * @public
 */
export declare class ExecuteTransactionCommand extends DynamoDBDocumentClientCommand<ExecuteTransactionCommandInput, ExecuteTransactionCommandOutput, __ExecuteTransactionCommandInput, __ExecuteTransactionCommandOutput, DynamoDBDocumentClientResolvedConfig> {
    readonly input: ExecuteTransactionCommandInput;
    protected readonly inputKeyNodes: {
        TransactStatements: {
            "*": {
                Parameters: import("@aws-sdk/lib-dynamodb/dist-types/commands/utils").KeyNodeChildren;
            };
        };
    };
    protected readonly outputKeyNodes: {
        Responses: {
            "*": {
                Item: import("@aws-sdk/lib-dynamodb/dist-types/commands/utils").KeyNodeChildren;
            };
        };
    };
    protected readonly clientCommand: __ExecuteTransactionCommand;
    readonly middlewareStack: MiddlewareStack<ExecuteTransactionCommandInput | __ExecuteTransactionCommandInput, ExecuteTransactionCommandOutput | __ExecuteTransactionCommandOutput>;
    constructor(input: ExecuteTransactionCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: DynamoDBDocumentClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ExecuteTransactionCommandInput, ExecuteTransactionCommandOutput>;
}
